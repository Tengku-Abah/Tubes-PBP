// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique @db.VarChar(50)
  email    String @unique @db.VarChar(100)
  password String @db.VarChar(255)
  
  toko     Toko[]
  cart     Cart[]
  pesanan  Pesanan[]
}

model Toko {
  id_toko      Int    @id @default(autoincrement()) @map("id_toko")
  user_id      Int
  nama_toko    String @db.VarChar(100)
  alamat_toko  String @db.Text
  kontak_toko  String? @db.VarChar(20)
  deskripsi    String? @db.Text
  
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Produk {
  id_produk   Int     @id @default(autoincrement()) @map("id_produk")
  nama_produk String  @db.VarChar(100)
  harga       Decimal @db.Decimal(12, 2)
  kategori    String? @db.VarChar(50)
  deskripsi   String? @db.Text
  berat       Decimal? @db.Decimal(8, 2)
  foto        String? @db.VarChar(255)
  
  cart    Cart[]
  pesanan Pesanan[]
}

model Cart {
  id_user   Int
  id_produk Int
  quantity  Int @default(1)
  
  user    User    @relation(fields: [id_user], references: [id], onDelete: Cascade)
  produk  Produk  @relation(fields: [id_produk], references: [id_produk], onDelete: Cascade)
  
  @@id([id_user, id_produk])
}

model Pesanan {
  id_pesanan Int @id @default(autoincrement()) @map("id_pesanan")
  id_user    Int
  id_produk  Int
  
  user   User   @relation(fields: [id_user], references: [id], onDelete: Restrict)
  produk Produk @relation(fields: [id_produk], references: [id_produk], onDelete: Restrict)
}
